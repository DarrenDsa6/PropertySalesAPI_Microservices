using System.ComponentModel.DataAnnotations.Schema;
using System.ComponentModel.DataAnnotations;
using Microsoft.EntityFrameworkCore.Metadata.Internal;

namespace TransactionAPI.Models.Domain
{
    // Represents a transaction entity in the system.
    public class Transaction
    {
        // Primary key for the transaction, auto-generated by the database.
        [Key]
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        public int TransactionId { get; set; }

        // Foreign key that references a Property entity.
        [ForeignKey("Property")]
        public int PropertyId { get; set; }

        // Foreign key that references a User entity (the buyer).
        [ForeignKey("User")]
        public int BuyerId { get; set; }

        // Foreign key that references a Broker entity.
        [ForeignKey("Broker")]
        public int BrokerId { get; set; }

        // Date when the transaction occurred.
        public DateTime TransactionDate { get; set; }

        // Amount involved in the transaction, stored with two decimal precision.
        [Required]
        [Column(TypeName = "decimal(18,2)")]
        public decimal Amount { get; set; }

        // Status of the transaction, stored as a varchar with a maximum length of 10.
        [Required]
        [Column(TypeName = "varchar(10)")]
        public TransactionStatus Status { get; set; }
    }

    // Enum to represent the type of transaction: either Sale or Rent.
    public enum TransactionType
    {
        Sale,
        Rent
    }

    // Enum to represent the status of the transaction.
    public enum TransactionStatus
    {
        Pending,    // Transaction is pending.
        Completed,  // Transaction has been completed.
        Cancelled   // Transaction has been cancelled.
    }
}
